{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonTable/PersonTable.tsx","pages/PeoplePage.tsx","pages/PageNavLinks.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","memo","PersonLink","person","to","slug","classNames","sex","name","PersonTable","people","selectedName","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","useParams","errorText","setErrorText","peopleFromServer","useMemo","fetch","response","json","personsFromServer","peopleWithParents","find","per","useEffect","length","PageNavLinks","text","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8c628b68.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">Home Page</h1>\n    </>\n  );\n};\n","import { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport type Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = memo(({\n  person,\n}) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames('', { 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport type Props = {\n  people: Person[]\n  slug: string | undefined\n};\n\nexport const PersonTable: React.FC<Props> = memo(({\n  people,\n  slug = '',\n}) => {\n  const selectedName = (person: Person) => person.slug === slug;\n\n  return (\n    <tbody>\n      {people.map(person => (\n        <tr\n          data-cy=\"person\"\n          className={classNames(\n            { 'has-background-warning': selectedName(person) },\n          )}\n          key={person.slug}\n        >\n          <td>\n            <PersonLink person={person} />\n          </td>\n\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n\n          <td>\n            {person.mother\n              ? <PersonLink person={person.mother} />\n              : <span>{person.motherName || '-'}</span>}\n          </td>\n\n          <td>\n            {person.father\n              ? <PersonLink person={person.father} />\n              : <span>{person.fatherName || '-'}</span>}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  );\n});\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { PersonTable } from '../components/PersonTable/PersonTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug } = useParams();\n  const [errorText, setErrorText] = useState('');\n\n  const errorMessage = (error: string) => {\n    setErrorText(error);\n  };\n\n  const peopleFromServer = useMemo(() => async () => {\n    try {\n      const response = await fetch(\n        'https://mate-academy.github.io/react_people-table/api/people.json',\n      );\n\n      const personsFromServer = await response.json();\n\n      const peopleWithParents = personsFromServer.map((person: Person) => {\n        return {\n          ...person,\n          mother: personsFromServer.find(\n            (per: Person) => per.name === person.motherName,\n          ),\n          father: personsFromServer.find(\n            (per: Person) => per.name === person.fatherName,\n          ),\n        };\n      });\n\n      setPeople(peopleWithParents);\n    } catch {\n      errorMessage('Something went wrong');\n    }\n  }, []);\n\n  useEffect(() => {\n    peopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {people.length === 0\n        ? (\n          <>\n            <Loader />\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorText}\n            </p>\n          </>\n        )\n        : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <PersonTable people={people} slug={slug} />\n          </table>\n        )}\n\n    </>\n  );\n});\n","import classNames from 'classnames';\nimport { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string\n  text: string\n};\n\nexport const PageNavLinks: React.FC<Props> = memo(({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => {\n        return classNames('navbar-item',\n          { 'has-background-grey-lighter': isActive });\n      }}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n});\n","import './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport React, { memo } from 'react';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNavLinks } from './pages/PageNavLinks';\n\nexport const App: React.FC = memo(() => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLinks text=\"Home\" to=\"/\" />\n            <PageNavLinks text=\"People\" to=\"/people\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n});\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}